@page "/select"
<input @bind="filterText" list="option-list" @oninput="HandleInput" />
<datalist id="option-list">
    @foreach (var option in FilteredOptions)
    {
        <option value="@option.Display">@option.Display</option>
    }
</datalist>
<button class="btn btn-outline-secondary" type="button" @onclick="ClearAndSubmit" title="Очистить">
    <i class="bi bi-x"></i>
</button>

<div>SelectedOptionId: @searchModel.SelectedOptionId</div>

@code {
    private string filterText;
    private OptionModel selectedOption;
    private List<OptionModel> options = new List<OptionModel>
    {
        new OptionModel { Id = 1, Display = "Option 1" },
        new OptionModel { Id = 2, Display = "Option 2" },
        new OptionModel { Id = 3, Display = "Option 3" },
        new OptionModel { Id = 4, Display = "Option 4" },
        new OptionModel { Id = 5, Display = "Option 5" }
    };

    private List<OptionModel> FilteredOptions =>
        string.IsNullOrWhiteSpace(filterText)
            ? options
            : options.Where(option => option.Display.Contains(filterText, StringComparison.OrdinalIgnoreCase)).ToList();

    private void HandleInput(ChangeEventArgs e)
    {
        var selectedDisplay = e.Value?.ToString();
        selectedOption = options.FirstOrDefault(option => option.Display == selectedDisplay);

        // Обновление значения SelectedOptionId в модели поиска
        searchModel.SelectedOptionId = selectedOption?.Id ?? 0;
    }

    // Модель поиска, связанная с компонентом
    private SearchModel searchModel = new SearchModel();

    public class SearchModel
    {
        public int SelectedOptionId { get; set; }
        // Дополнительные свойства модели поиска
        // ...
    }

    public class OptionModel
    {
        public int Id { get; set; }
        public string Display { get; set; }
    }

    private void ClearAndSubmit()
    {
        filterText = string.Empty;
    }
}
